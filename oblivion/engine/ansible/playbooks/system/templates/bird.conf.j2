{% set my_octet = this_host.private_ip.rsplit('.', 1)[1]|int %}
{% set my_as = my_octet %}  {# or do (64512 + my_octet) if you want to keep within 64512â€“65535 #}

router id {{ this_host.private_ip }};
log syslog all;

protocol device {
  scan time 10;
}

protocol kernel {
  ipv4 { import all; export all; };
  scan time 20;
}

protocol direct {
  ipv4;
  interface "wg0";
}






{% for peer in peers %}
{% set peer_octet = peer.private_ip.rsplit('.', 1)[1]|int %}
{% set peer_as = peer_octet %}  {# same logic - use last octet #}

protocol bgp {{ peer.hostname | replace('-', '_') }} {
  local as {{ my_as }};
  neighbor {{ peer.private_ip }} as {{ peer_as }};

  ipv4 {
    import all;                 # accept everything from the peer
    export all;  
    next hop self;              # rewrite next-hop for partial mesh
  };

  direct;  # We assume the neighbor is on a directly connected WG interface
}
{% endfor %}

