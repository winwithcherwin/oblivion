
"""
Dynamic MOTD generator that centers a banner and subtext using wcwidth.
This script prints the MOTD content to stdout.
"""

import shutil
import locale

try:
    from wcwidth import wcswidth
except ImportError:
    def wcswidth(s):
        # Simple fallback: assume each char is 1 column wide unless its codepoint is high.
        return sum(2 if ord(c) >= 0x1100 else 1 for c in s)

# Set locale for proper Unicode handling.
locale.setlocale(locale.LC_ALL, '')

# Get terminal width dynamically (default to 80 if unavailable)
try:
    width = shutil.get_terminal_size().columns
except Exception:
    width = 80

# Define banner and subtext.
banner = "ｏｂｌｉｖｉｏｎ"
subtext = "Welcome."

# Calculate display widths using wcwidth.
banner_width = wcswidth(banner)
subtext_width = wcswidth(subtext)

# Compute natural left padding for centering.
banner_padding = (width - banner_width) // 2
subtext_padding = (width - subtext_width) // 2
if banner_padding < 0:
    banner_padding = 0
if subtext_padding < 0:
    subtext_padding = 0

# ANSI color codes for bold purple.
BOLD_PURPLE = "\033[1;35m"
RESET = "\033[0m"

# Build output with minimal vertical padding.
output = "\n"
output += " " * banner_padding + BOLD_PURPLE + banner + RESET + "\n"
output += " " * subtext_padding + subtext + "\n"
output += "\n"

print(output, end="")

