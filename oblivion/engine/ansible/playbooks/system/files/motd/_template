"""
Dynamic MOTD script that centers a banner and centers subtext directly beneath it.
It uses wcwidth to accurately measure Unicode display widths and caps left padding on wide screens.
"""

import shutil
import locale
from wcwidth import wcswidth

# Set locale for proper Unicode handling.
locale.setlocale(locale.LC_ALL, '')

# Get terminal width dynamically (default to 80 columns if unavailable).
try:
    width = shutil.get_terminal_size().columns
except Exception:
    width = 80

# Define banner and subtext.
banner = "ｏｂｌｉｖｉｏｎ"
subtext = "Welcome."

# Calculate display widths using wcwidth.
banner_width = wcswidth(banner)
subtext_width = wcswidth(subtext)

# Compute natural left padding for centering the banner.
natural_banner_padding = (width - banner_width) // 2

# Cap left padding on wide screens.
max_padding = 40
banner_padding = min(natural_banner_padding, max_padding)

# Compute subtext padding so that it is centered relative to the banner.
# That is, shift it to the right by half the difference between the banner's display width and the subtext's.
subtext_padding = banner_padding + ((banner_width - subtext_width) // 2)

# ANSI color codes for bold purple.
BOLD_PURPLE = "\033[1;35m"
RESET = "\033[0m"

# Print with minimal vertical breathing space (1 blank line above and below).
print("\n")
print(" " * banner_padding + BOLD_PURPLE + banner + RESET)
print(" " * subtext_padding + subtext)
print("\n")

