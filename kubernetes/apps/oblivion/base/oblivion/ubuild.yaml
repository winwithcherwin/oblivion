apiVersion: v1
kind: ServiceAccount
metadata:
  name: ubuild
  namespace: oblivion
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ubuild-controller
rules:
  - apiGroups: ["ubuild.winwithcherwin.com"]
    resources: ["imagebuilds"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: ["ubuild.winwithcherwin.com"]
    resources: ["imagebuilds/status"]
    verbs: ["get", "update", "patch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["image.toolkit.fluxcd.io"]
    resources: ["imagerepositories", "imagepolicies", "kustomizations"]
    verbs: ["get", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ubuild-builder
  namespace: oblivion
rules:
  - apiGroups: ["batch"]
    resources: ["jobs"]
    verbs: ["create", "get", "list", "watch", "delete"]
  - apiGroups: [""]
    resources: ["secrets", "persistentvolumeclaims"]
    verbs: ["get"]
  - apiGroups: ["batch"]
    resources: ["jobs", "jobs/status"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ubuild-controller
subjects:
  - kind: ServiceAccount
    name: ubuild
    namespace: oblivion
roleRef:
  kind: ClusterRole
  name: ubuild-controller
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ubuild-builder
  namespace: oblivion
subjects:
  - kind: ServiceAccount
    name: ubuild
    namespace: oblivion
roleRef:
  kind: Role
  name: ubuild-builder
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ubuild
  namespace: oblivion
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ubuild
  template:
    metadata:
      labels:
        app: ubuild
        ubuild: controller
    spec:
      serviceAccountName: ubuild
      restartPolicy: Always
      containers:
        - name: controller
          image: registry.registry.svc.cluster.local:5000/oblivion:main-e292ef473a6b15f83b68014df82487b7ad8fd4b2-1745272686.218588 # {"$imagepolicy": "flux-system:oblivion"}
          imagePullPolicy: IfNotPresent
          command:
            - python3
            - -m
            - oblivion
            - start
            - ubuild
---
apiVersion: v1
kind: Service
metadata:
  name: ubuild-service
  namespace: oblivion
spec:
  selector:
    app: ubuild
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ubuild-ingress
  namespace: oblivion
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  tls:
    - secretName: wildcard-winwithcherwin-com
      hosts:
        - ubuild.staging.winwithcherwin.com
  rules:
    - host: ubuild.staging.winwithcherwin.com
      http:
        paths:
          - path: /webhook/github
            pathType: Prefix
            backend:
              service:
                name: ubuild-service
                port:
                  number: 80
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kaniko-cache-pvc
  namespace: oblivion
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: local-path
