apiVersion: v1
kind: ConfigMap
metadata:
  name: kubernetes-demo-cluster
  namespace: oblivion
  labels:
    provider: digitalocean
  annotations:
    create-cluster/enable: "true"
data:
  context: |
    clusterName: "demo-cluster"
    nodeCount: 1
    instanceType: "s-1vcpu-1gb"
    controlPlaneEndpoint:
      host: "91.99.2.195"
      port: 30443
---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: kubernetes-create-digitalocean-cluster
spec:
  background: true
  rules:
  - name: create-control-plane
    match:
      any:
      - resources:
          kinds:
          - ConfigMap
          annotations:
            create-cluster/enable: "true"
          selector:
            matchLabels:
              provider: digitalocean
    context:
    - name: config
      configMap:
        name: "{{ request.object.metadata.name }}"
        namespace: "{{ request.namespace }}"
    - name: context
      variable:
        jmesPath: "config.data.context | parse_yaml(@)"   
    generate:
      apiVersion: controlplane.cluster.x-k8s.io/v1beta1
      kind: K0smotronControlPlane
      name: "{{ context.clusterName }}"
      namespace: "{{ request.namespace }}"
      generateExisting: true
      data:
        spec:
          version: v1.30.4-k0s.0
          externalAddress: "{{ context.controlPlaneEndpoint.host }}"
          etcd:
            autoDeletePVCs: true
          persistence:
            autoDeletePVCs: true
          k0sConfig:
            apiVersion: k0s.k0sproject.io/v1beta1
            kind: ClusterConfig
            spec:
              api:
                externalAddress: "{{ context.controlPlaneEndpoint.host }}"
              network:
                provider: kuberouter
                kuberouter:
                  ipMasq: true
          replicas: 1
          service:
            type: NodePort
  - name: create-remote-cluster
    match:
      any:
      - resources:
          kinds:
          - ConfigMap
          annotations:
            create-cluster/enable: "true"
          selector:
            matchLabels:
              provider: digitalocean
    context:
    - name: config
      configMap:
        name: "{{ request.object.metadata.name }}"
        namespace: "{{ request.namespace }}"
    - name: context
      variable:
        jmesPath: "config.data.context | parse_yaml(@)"              
    generate:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: RemoteCluster
      name: "{{ context.clusterName }}"
      namespace: "{{ request.namespace }}"
      generateExisting: true
      data:
        spec:
          controlPlaneEndpoint: "{{ context.controlPlaneEndpoint }}" 
  - name: create-cluster-object
    match:
      any:
      - resources:
          kinds:
          - ConfigMap
          annotations:
            create-cluster/enable: "true"
          selector:
            matchLabels:
              provider: digitalocean
    context:
    - name: config
      configMap:
        name: "{{ request.object.metadata.name }}"
        namespace: "{{ request.namespace }}"
    - name: context
      variable:
        jmesPath: "config.data.context | parse_yaml(@)"              
    generate:
      apiVersion: cluster.x-k8s.io/v1beta1
      kind: Cluster
      name: "{{ context.clusterName }}"
      namespace: "{{ request.namespace }}"
      generateExisting: true
      data:
        spec:
          controlPlaneEndpoint: "{{ context.controlPlaneEndpoint }}"
          clusterNetwork:
            pods:       { cidrBlocks: ["192.168.0.0/16"] }
            services:   { cidrBlocks: ["10.128.0.0/12"] }
            serviceDomain: cluster.local
          controlPlaneRef:
            apiVersion: controlplane.cluster.x-k8s.io/v1beta1
            kind: K0smotronControlPlane
            name: "{{ context.clusterName }}"
          infrastructureRef:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
            kind: RemoteCluster
            name: "{{ context.clusterName }}"